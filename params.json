{"name":"Thomas T. Tan","tagline":"My coding blog.","body":"### A short, somewhat efficient, primality test in C ###\r\n\r\nWelcome to my first GitHub Page.  Onto prime numbers!\r\n\r\nBy intuition, testing whether a given number is prime or not (primality testing), can be more efficiently done by noting that all prime numbers can be expressed as 6*k ± 1 ≤ sqrt(n) for k = 1, 2, 3, ..., while noting at the same time that the converse of this is not true.\r\n\r\nBelow is a succinct implementation of mine in C99.\r\n\r\n```\r\n#include <stdbool.h>\r\n#include <math.h>  // for sqrt()\r\n\r\nbool isPrime(int number) {\r\n\tif (number == 0 || number == 1 || number % 2 == 0 || number % 3 == 0)\r\n\t\treturn number == 2 || number == 3;\r\n\r\n\tint j;\r\n\tfor (j = 5; j <= sqrt(number); j += 6)\r\n\t\tif (number % j == 0 || number % (j + 2) == 0)\r\n\t\t\treturn false;\r\n\r\n\treturn true;\r\n}\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}